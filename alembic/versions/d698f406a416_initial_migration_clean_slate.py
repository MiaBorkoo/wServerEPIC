"""initial_migration_clean_slate

Revision ID: d698f406a416
Revises: 
Create Date: 2025-06-06 11:23:32.247988

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from app.db.models import GUID


# revision identifiers, used by Alembic.
revision: str = 'd698f406a416'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('auth_salt', sa.String(length=64), nullable=False),
    sa.Column('auth_salt_2', sa.String(length=64), nullable=False),
    sa.Column('enc_salt', sa.String(length=64), nullable=False),
    sa.Column('auth_hash', sa.String(length=128), nullable=False),
    sa.Column('encrypted_mek', sa.LargeBinary(), nullable=False),
    sa.Column('totp_secret', sa.String(length=64), nullable=False),
    sa.Column('totp_last_counter', sa.BigInteger(), nullable=True),
    sa.Column('public_key', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('user_data_hmac', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('device_certificates',
    sa.Column('cert_id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('device_id', sa.String(length=64), nullable=False),
    sa.Column('public_key', sa.LargeBinary(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('signature', sa.LargeBinary(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('cert_id'),
    sa.UniqueConstraint('user_id', 'device_id', name='unique_user_device')
    )
    op.create_index('idx_device_user_id', 'device_certificates', ['user_id'], unique=False)
    op.create_table('files',
    sa.Column('file_id', GUID(), nullable=False),
    sa.Column('owner_id', GUID(), nullable=False),
    sa.Column('filename_encrypted', sa.LargeBinary(), nullable=False),
    sa.Column('file_size_encrypted', sa.LargeBinary(), nullable=False),
    sa.Column('upload_timestamp', sa.BigInteger(), nullable=False),
    sa.Column('file_data_hmac', sa.String(length=64), nullable=False),
    sa.Column('server_storage_path', sa.String(length=255), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('file_id')
    )
    op.create_table('file_audit_log',
    sa.Column('log_id', GUID(), nullable=False),
    sa.Column('file_id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.BigInteger(), nullable=False),
    sa.Column('client_ip_hash', sa.String(length=64), nullable=True),
    sa.Column('log_entry_hmac', sa.String(length=64), nullable=False),
    sa.Column('previous_log_hmac', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.file_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index('idx_file_timestamp', 'file_audit_log', ['file_id', 'timestamp'], unique=False)
    op.create_table('shares',
    sa.Column('share_id', GUID(), nullable=False),
    sa.Column('file_id', GUID(), nullable=False),
    sa.Column('owner_id', GUID(), nullable=False),
    sa.Column('recipient_id', GUID(), nullable=False),
    sa.Column('encrypted_data_key', sa.LargeBinary(), nullable=False),
    sa.Column('granted_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('share_grant_hmac', sa.String(length=64), nullable=False),
    sa.Column('share_chain_hmac', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.file_id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('share_id'),
    sa.UniqueConstraint('file_id', 'recipient_id', name='unique_file_recipient')
    )
    op.create_table('trust_relationships',
    sa.Column('trust_id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('trusted_cert_id', GUID(), nullable=False),
    sa.Column('trust_level', sa.String(length=20), nullable=False),
    sa.Column('verification_method', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['trusted_cert_id'], ['device_certificates.cert_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('trust_id')
    )
    op.create_index('idx_trust_cert_id', 'trust_relationships', ['trusted_cert_id'], unique=False)
    op.create_index('idx_trust_user_id', 'trust_relationships', ['user_id'], unique=False)
    op.create_table('verification_events',
    sa.Column('event_id', GUID(), nullable=False),
    sa.Column('trust_id', GUID(), nullable=False),
    sa.Column('event_type', sa.String(length=20), nullable=False),
    sa.Column('method', sa.String(length=20), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['trust_id'], ['trust_relationships.trust_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_index('idx_verification_created_at', 'verification_events', ['created_at'], unique=False)
    op.create_index('idx_verification_trust_id', 'verification_events', ['trust_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_verification_trust_id', table_name='verification_events')
    op.drop_index('idx_verification_created_at', table_name='verification_events')
    op.drop_table('verification_events')
    op.drop_index('idx_trust_user_id', table_name='trust_relationships')
    op.drop_index('idx_trust_cert_id', table_name='trust_relationships')
    op.drop_table('trust_relationships')
    op.drop_table('shares')
    op.drop_index('idx_file_timestamp', table_name='file_audit_log')
    op.drop_table('file_audit_log')
    op.drop_table('files')
    op.drop_index('idx_device_user_id', table_name='device_certificates')
    op.drop_table('device_certificates')
    op.drop_table('users')
    # ### end Alembic commands ###
